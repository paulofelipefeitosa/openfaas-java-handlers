import sys
import re

def get_list(line):
    str_list = line.split("]")[0].split("[")[1].split(", ")
    llist = map(lambda x: int(x), str_list)
    return llist

def eprint(string):
    sys.stderr.write(string + "\n")

def print_metric(metric, exec_id, metric_value)
    print ("%s,%s,%s,%d" % (metric, exec_id, "0", metric_value))

def main():
    EXEC_ID = sys.argv[1]
    clone_list = []
    execve_list = []
    for line in sys.stdin:
        x = re.search(" clone: execute", line)
        y = re.search(" execve: .*java.*", line)
        if x:
            llist = get_list(line)
            clone_list.append(llist)
        elif y:
            execve_list = get_list(line)
            eprint("Found execve java list: " + str(execve_list))
            break
        else:
            eprint("Ops?? Not clone or execve, please check the file")

    if not (execve_list == []):
        execve_pid = execve_list[0]
        final_clone_list = None
        for clone_rep in reversed(clone_list):
            clone_ret_val = clone_rep[2]
            if clone_ret_val == execve_pid:
                final_clone_list = clone_rep
                break
        if final_clone_list:
            print_metric("CloneEntry", EXEC_ID, final_clone_list[3])
            print_metric("CloneExit", EXEC_ID, final_clone_list[4])
            print_metric("ExecveEntry", EXEC_ID, execve_list[3])
            print_metric("ExecveExit", EXEC_ID, execve_list[4])
        else:
            eprint("Could not identify clone to java bin")
    else:
        eprint("Could not identify execve to java bin")

main()